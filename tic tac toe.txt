import random


def display_board(board):
    """
    Prints the Tic Tac Toe board in a visually appealing format.
    """
    for i in range(3):
        # Print each row with borders and spacing
        print(f"{board[3 * i]} | {board[3 * i + 1]} | {board[3 * i + 2]}")
        if i < 2:
            print("-------")


def player_input():
    """
    Prompts the players to choose their markers (X or O).
    """
    marker = ''
    while marker not in ['X', 'O']:
        marker = input('Player 1: Choose X or O: ').upper()

    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')
print(player_input())

def place_marker(board, marker, position):
    """
    Places the player's marker on the specified position of the board.
    """
    board[position] = marker


def win_check(board, mark):
    """
    Checks if the given player has won the game.
    """
    winning_combinations = ((0, 1, 2), (3, 4, 5), (6, 7, 8),
                            (0, 3, 6), (1, 4, 7), (2, 5, 8),
                            (0, 4, 8), (2, 4, 6))
    for row in winning_combinations:
        if board[row[0]] == mark and board[row[1]] == mark and board[row[2]] == mark:
            return True
    return False


def choose_first():
    """
    Randomly determines who goes first (Player 1 or Player 2).
    """
    flip = random.randint(0, 1)
    if flip == 0:
        return 'Player 1'
    else:
        return 'Player 2'


def space_check(board, position):
    """
    Checks if the specified position on the board is empty.
    """
    return board[position] == ' '


def full_board_check(board):
    """
    Checks if the board is completely filled (no empty spaces).
    """
    for i in range(1, 10):
        if space_check(board, i):
            return False
    return True


def player_choice(board):
    """
    Prompts the current player to choose a valid position on the board.
    """
    while True:
        try:
            position = int(input('Choose a position (1-9): '))
            if 1 <= position <= 9 and space_check(board, position):
                return position
            else:
                print(
                    "Invalid position. Please choose a position from 1 to 9 that is not already taken.")
        except ValueError:
            print("Invalid input. Please enter a number.")


def replay():
    """
    Asks the players if they want to play another game.
    """
    choice = input("Play again? (Yes or No): ").lower()
    return choice == 'yes'


# Game Loop
print('WELCOME TO TIC TAC TOE GAME!')
while True:
    # Set up the board and players
    the_board = [' ']*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(f"{turn} will go first.")

    play_game = input('Ready to play? (y or n): ').lower()
    if play_game != 'y':
        break

    game_on = True
    while game_on:
        # Player 1's turn
        if turn == 'Player 1':
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board, player1_marker, position)

            # Check for win or tie
            if win_check(the_board, player1_marker):
                display_board(the_board)
                print('Player 1 wins!')
                game_on = False
            elif full_board_check(the_board):
                display_board(the_board)
                print('Tie game!')
                game_on = False
            else:
                turn = 'Player 2'
                
        # Player 2's turn
        else:
            display_board(the_board)
            position = player_choice(the_board)
            place_marker(the_board, player2_marker, position)

            # Check for win or tie
            if win_check(the_board, player2_marker):
                display_board(the_board)
                print('Player 2 wins!')
                game_on = False
            elif full_board_check(the_board):
                display_board(the_board)
                print('Tie game!')
                game_on = False
            else:
                turn = 'Player 1'

    if not replay():
        break
